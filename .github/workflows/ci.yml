name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

# 同一分支并发时，自动取消旧任务
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  api-tests:
    name: API · pytest
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: objectforge-api   # ← 若你的后端目录是 app/，改成 app
    env:
      REMBG_PASSTHROUGH: "1"   # 避免 rembg 下载模型，使用直通模式跑测
      PYTHONDONTWRITEBYTECODE: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: >-
            pip-${{ runner.os }}-${{ hashFiles('objectforge-api/requirements.txt',
                                               'objectforge-api/requirements-dev.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run pytest (quick)
        run: pytest -q

      - name: Coverage (xml)
        run: pytest --cov=. --cov-report=xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-coverage-xml
          path: objectforge-api/coverage.xml
          if-no-files-found: ignore

  web-build:
    name: Web · build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: objectforge-web   # ← 若前端目录不同，请相应修改
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: objectforge-web/package-lock.json

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Build
        run: npm run build

